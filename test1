stage('Snowflake: PUT + COPY (FQN + result only)') {
  steps {
    container('dap-build-tools') {
      withCredentials([sshUserPrivateKey(credentialsId: params.CREDENTIAL_ID, keyFileVariable: 'PRIVATE_KEY_PATH')]) {
        withEnv([
          "SNOW_ACCOUNT=${params.SNOW_ACCOUNT}",
          "SNOW_USER=${params.SNOW_USER}",
          "SNOW_ROLE=${params.SNOW_ROLE}",
          "SNOW_WAREHOUSE=${params.SNOW_WH}",
          "SNOW_DATABASE=${params.SNOW_DB}",
          "SNOW_SCHEMA=${params.SNOW_SCHEMA}",
          "SNOW_TABLE=${params.SNOW_TABLE}",
          "CODE_DATE=${params.CODE_DATE ?: ''}",
          "CSV_PREFIX=${params.CSV_PREFIX ?: 'S3_FILESIZES'}",
          "FORCE_COPY=${params.FORCE_COPY ?: 'TRUE'}"
        ]) {
          sh '''set -eu

to_lower(){ printf '%s' "$1" | tr '[:upper:]' '[:lower:]'; }
: "${CODE_DATE:=}"
: "${CSV_PREFIX:=S3_FILESIZES}"
: "${FORCE_COPY:=TRUE}"
if [ -z "$CSV_PREFIX" ] || [ "$(to_lower "$CSV_PREFIX")" = "null" ] || [ "$(to_lower "$CSV_PREFIX")" = "none" ]; then
  CSV_PREFIX="S3_FILESIZES"
fi
if [ -z "$FORCE_COPY" ] || [ "$(to_lower "$FORCE_COPY")" = "null" ]; then
  FORCE_COPY="TRUE"
fi

CSV_PATH="${CSV_PREFIX}${CODE_DATE:+_${CODE_DATE}}.csv"
FILE_BASENAME="$(basename "$CSV_PATH")"

ESCAPED_BASENAME="$(printf '%s' "$FILE_BASENAME" | sed 's/[.[\\^$*]/\\\\&/g')"
TARGET_FQN="${SNOW_DATABASE}.${SNOW_SCHEMA}.${SNOW_TABLE}"

command -v snowsql >/dev/null 2>&1 || { echo "snowsql not found"; exit 127; }
[ -f "$CSV_PATH" ] || { echo "CSV not found: $CSV_PATH"; ls -la; exit 66; }

echo "Using CSV_PATH=$CSV_PATH ; FILE_BASENAME=$FILE_BASENAME ; TARGET_FQN=$TARGET_FQN ; FORCE_COPY=$FORCE_COPY"

cat > copy.sql <<EOF
USE ROLE ${SNOW_ROLE};
USE WAREHOUSE ${SNOW_WAREHOUSE};
USE DATABASE ${SNOW_DATABASE};
USE SCHEMA ${SNOW_SCHEMA};

SELECT CURRENT_ROLE() role, CURRENT_WAREHOUSE() wh, CURRENT_DATABASE() db, CURRENT_SCHEMA() sch;

REMOVE @~ pattern='^${ESCAPED_BASENAME}$';
PUT file://$PWD/${CSV_PATH} @~ OVERWRITE=TRUE AUTO_COMPRESS=FALSE;
LIST @~ pattern='^${ESCAPED_BASENAME}$';

COPY INTO ${TARGET_FQN}
  FROM @~/${FILE_BASENAME}
  FILE_FORMAT=(TYPE=CSV SKIP_HEADER=1 FIELD_OPTIONALLY_ENCLOSED_BY=0x22)
  ON_ERROR=ABORT_STATEMENT
  FORCE=${FORCE_COPY};

SELECT rows_loaded, errors_seen, first_error_message, first_error_line
FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

SELECT * FROM ${TARGET_FQN} ORDER BY 1 DESC LIMIT 5;
EOF

echo "===== copy.sql (head) ====="
sed -n '1,200p' copy.sql || true
echo "===== end ====="

snowsql \
  -a "$SNOW_ACCOUNT" -u "$SNOW_USER" -r "$SNOW_ROLE" \
  -w "$SNOW_WAREHOUSE" -d "$SNOW_DATABASE" -s "$SNOW_SCHEMA" \
  --private-key-path "$PRIVATE_KEY_PATH" \
  -o friendly=false -o exit_on_error=true \
  -f copy.sql
'''
        }
      }
    }
  }
}
