/* ===========================================================
   INTEREST_MAPPING_EXTRACT

   Product/IBS account/Customer/Current Balance/
   Day Basis/Interest rate/Payment method/Payment freq/
   Accrual start & end
   =========================================================== */
CREATE OR REPLACE VIEW DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.INTEREST_MAPPING_EXTRACT AS
WITH
--find latest COB
cob AS (
  SELECT MAX(COB_DAY_DATE) AS cob_date
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.V_INT_COB_DAYS
),

----1) Product + Customer （BNK_AA_ARRANGEMENT）------
arrangement_base AS (
  SELECT
    a.ARRANGEMENT_ID,
    a.ACTIVE_PRODUCT,                   -- Product
    a.ARR_STATUS,
    a.CUSTOMER_ROLE,
    a.CUSTOMER                          -- Customer
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARRANGEMENT a
  WHERE (UPPER(a.ACTIVE_PRODUCT) LIKE 'TD.%'
         OR UPPER(a.ACTIVE_PRODUCT) LIKE 'TD_%'
         OR UPPER(a.ACTIVE_PRODUCT) LIKE 'DEPOSITS%')
    AND UPPER(a.ARR_STATUS) IN ('CURRENT','PENDING_CLOSURE')
    AND NOT EXISTS (
      SELECT 1
      FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_BNZ_BREAK_DETAILS b
      WHERE b.ARRANGEMENT_ID = a.ARRANGEMENT_ID
        AND COALESCE(UPPER(b.BREAK_CANCELLED),'NO') = 'YES'
        AND UPPER(b.BRK_REASON) = 'WITHDRAW'
    )
),

-----2) IBS account （BNK_AA_ARR_ACCOUNT → ALT_ID）--------
arr_account_latest AS (
  SELECT
    SPLIT_PART(aa.ARRANGEMENT_KEY,'-',1) AS ARRANGEMENT_ID,
    aa.ALT_ID_TYPE                       AS ALT_ID,
    aa.MIS_DATE
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARR_ACCOUNT aa, cob
  WHERE COALESCE(
          TRY_TO_DATE(SPLIT_PART(SPLIT_PART(aa.ARRANGEMENT_KEY,'-',3),'.',1),'YYYYMMDD'),
          aa.MIS_DATE::DATE
        ) <= cob.cob_date
  QUALIFY ROW_NUMBER() OVER (
    PARTITION BY SPLIT_PART(aa.ARRANGEMENT_KEY,'-',1)
    ORDER BY aa.MIS_DATE DESC
  ) = 1
),

------3) Day Basis / Interest rate （BNK_AA_ARR_INTEREST）-----
arr_interest_latest AS (
  SELECT
    SPLIT_PART(ai.ARRANGEMENT_KEY,'-',1) AS ARRANGEMENT_ID,
    ai.DAY_BASIS,
    ai.EFFECTIVE_RATE,
    COALESCE(
      TRY_TO_DATE(SPLIT_PART(SPLIT_PART(ai.ARRANGEMENT_KEY,'-',3),'.',1),'YYYYMMDD'),
      ai.MIS_DATE::DATE
    ) AS ID_DATE,
    ai.MIS_DATE
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARR_INTEREST ai, cob
  WHERE UPPER(ai.ARRANGEMENT_KEY) LIKE '%-DEPOSITINT-%'
    AND COALESCE(
          TRY_TO_DATE(SPLIT_PART(SPLIT_PART(ai.ARRANGEMENT_KEY,'-',3),'.',1),'YYYYMMDD'),
          ai.MIS_DATE::DATE
        ) <= cob.cob_date
  QUALIFY ROW_NUMBER() OVER (
    PARTITION BY SPLIT_PART(ai.ARRANGEMENT_KEY,'-',1)
    ORDER BY ID_DATE DESC, ai.MIS_DATE DESC
  ) = 1
),

-------4) Payment method / freq （BNK_AA_ARR_PAYMENT_SCHEDULE）--------
payment_schedule_latest AS (
  SELECT
    SPLIT_PART(ps.ARRANGEMENT_KEY,'-',1) AS ARRANGEMENT_ID,
    UPPER(ps.PAYMENT_METHOD)             AS PAYMENT_METHOD,
    ps.PAYMENT_FREQ                      AS PAYMENT_FREQ,
    ps.MIS_DATE
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARR_PAYMENT_SCHEDULE ps, cob
  WHERE UPPER(ps.PAYMENT_TYPE) LIKE 'INTEREST%'
    AND COALESCE(
          TRY_TO_DATE(SPLIT_PART(ps.ID_COMP_3,'-',1),'YYYYMMDD'),
          ps.MIS_DATE::DATE
        ) <= cob.cob_date
  QUALIFY ROW_NUMBER() OVER (
    PARTITION BY SPLIT_PART(ps.ARRANGEMENT_KEY,'-',1)
    ORDER BY COALESCE(TRY_TO_DATE(SPLIT_PART(ps.ID_COMP_3,'-',1),'YYYYMMDD'), ps.MIS_DATE::DATE) DESC,
             ps.MIS_DATE DESC
  ) = 1
),

------5) Current Balance / Accrual period （BNK_AA_INTEREST_ACCRUALS）---------
   仅 DEPOSITINT，TO_DATE = COB_DATE */
accruals_today AS (
  SELECT
    REGEXP_SUBSTR(ia.PROPERTY_NAME,'AA[0-9A-Z]+') AS ARRANGEMENT_ID,
    TRY_TO_DECIMAL(
      SPLIT(ia.BALANCE, HEX_DECODE_STRING('EFA3BD'))[idx.index]::STRING, 38, 2
    )                                             AS BALANCE,
    TRY_TO_DATE(
      SPLIT(ia.PERIOD_START, HEX_DECODE_STRING('EFA3BD'))[idx.index]::STRING,'YYYYMMDD'
    )                                             AS PERIOD_START,
    TRY_TO_DATE(
      SPLIT(ia.PERIOD_END, HEX_DECODE_STRING('EFA3BD'))[idx.index]::STRING,'YYYYMMDD'
    )                                             AS PERIOD_END
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_INTEREST_ACCRUALS ia,
       LATERAL FLATTEN(input => SPLIT(ia.TO_DATE, HEX_DECODE_STRING('EFA3BD'))) idx,
       cob
  WHERE REGEXP_SUBSTR(ia.PROPERTY_NAME,'AA[0-9A-Z]+') IS NOT NULL
    AND UPPER(ia.PROPERTY_NAME) LIKE '%-DEPOSITINT-%'
    AND TRY_TO_DATE(idx.value::STRING,'YYYYMMDD') = (SELECT cob_date FROM cob)
)

----------Final Output----------------------------------------
SELECT
  a.ARRANGEMENT_ID,
  a.ACTIVE_PRODUCT,
  al.ALT_ID,
  a.CUSTOMER,
  ai.DAY_BASIS,
  ai.EFFECTIVE_RATE,
  ps.PAYMENT_METHOD,
  ps.PAYMENT_FREQ,
  ac.PERIOD_START,
  ac.PERIOD_END,
  ac.BALANCE
FROM arrangement_base a
LEFT JOIN arr_account_latest      al USING (ARRANGEMENT_ID)
LEFT JOIN arr_interest_latest     ai USING (ARRANGEMENT_ID)
LEFT JOIN payment_schedule_latest ps USING (ARRANGEMENT_ID)
LEFT JOIN accruals_today          ac USING (ARRANGEMENT_ID)
;
