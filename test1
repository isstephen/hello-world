pipeline {
  agent {
    kubernetes {
      defaultContainer 'sf'
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: sf
    image: registry.nz.thenational.com/dapds/dap-build-tools:bdh-snowsql-unspecified
    command: ['sh','-c','cat']
    tty: true
  - name: jnlp
    image: jenkins/inbound-agent:latest-jdk17
"""
    }
  }

  parameters {
    string(name: 'SNOW_ACCOUNT', defaultValue: 'ab12345.us-east-1.aws')
    string(name: 'SNOW_USER',    defaultValue: 'svc_myuser')
    string(name: 'SNOW_ROLE',    defaultValue: 'SYSADMIN')
    string(name: 'SNOW_WH',      defaultValue: 'COMPUTE_WH')
    string(name: 'CREDENTIAL_ID',defaultValue: 'snowflake-dev02-key',
           description: 'Jenkins SSH Private Key（p8）凭据 ID')
  }

  stages {
    stage('Test Snowflake') {
      steps {
        container('sf') {
          withCredentials([sshUserPrivateKey(
            credentialsId: params.CREDENTIAL_ID,
            keyFileVariable: 'PRIVATE_KEY_PATH',
            passphraseVariable: 'PRIVATE_KEY_PASSPHRASE'  // 私钥没口令也没关系
          )]) {
            sh '''
              set -euo pipefail
              mkdir -p ~/.snowsql
              cat > ~/.snowsql/config <<EOF
[connections.dev]
accountname       = ${SNOW_ACCOUNT}
username          = ${SNOW_USER}
rolename          = ${SNOW_ROLE}
warehousename     = ${SNOW_WH}
authenticator     = snowflake_jwt
private_key_path  = ${PRIVATE_KEY_PATH}
client_session_keep_alive = true
EOF
              [ -n "${PRIVATE_KEY_PASSPHRASE:-}" ] && \
                printf "private_key_passphrase = %s\\n" "$PRIVATE_KEY_PASSPHRASE" >> ~/.snowsql/config

              snowsql -c dev -o friendly=false -q "
                select current_account(), current_region(), current_user(),
                       current_role(), current_warehouse();
              "
              snowsql -c dev -o friendly=false -q "select 1 as ok;"
            '''
          }
        }
      }
    }
  }
}