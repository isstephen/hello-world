
CREATE OR REPLACE VIEW DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.EXPECTED_INTEREST AS
WITH src AS (
  SELECT
    ARRANGEMENT_ID,
    ACTIVE_PRODUCT,
    ALT_ID,
    CUSTOMER,
    UPPER(TRIM(COALESCE(DAY_BASIS,'E')))                                   AS DAY_BASIS,
    CAST(TRY_TO_NUMBER(EFFECTIVE_RATE) AS DECIMAL(18,9))                    AS EFFECTIVE_RATE_N,
    UPPER(TRIM(COALESCE(PAYMENT_METHOD,'')))                                AS PAYMENT_METHOD,
    PAYMENT_FREQ,
    TRY_TO_DATE(PERIOD_START)                                               AS PERIOD_START,
    TRY_TO_DATE(PERIOD_END)                                                 AS PERIOD_END,
    CAST(TRY_TO_NUMBER(BALANCE) AS DECIMAL(38,2))                           AS PRINCIPAL
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.INTEREST_FIELDS_3
),
norm AS (
  SELECT
    s.*,
    CASE
      WHEN DAY_BASIS IN ('E','365','ACT/365','ACT365')
        THEN CAST(365 AS DECIMAL(18,9))
      WHEN DAY_BASIS IN ('360','ACT/360','ACT360')
        THEN CAST(360 AS DECIMAL(18,9))
      ELSE CAST(365 AS DECIMAL(18,9))
    END                                                                     AS DENOM,
    CASE
      WHEN EFFECTIVE_RATE_N IS NULL
        THEN CAST(NULL AS DECIMAL(18,9))
      WHEN EFFECTIVE_RATE_N > CAST(1 AS DECIMAL(18,9))
        THEN CAST(EFFECTIVE_RATE_N / CAST(100 AS DECIMAL(18,9)) AS DECIMAL(18,9))
      ELSE CAST(EFFECTIVE_RATE_N AS DECIMAL(18,9))
    END                                                                     AS RATE_DECIMAL,
    DATEDIFF('day', PERIOD_START, PERIOD_END)                                AS DAYS_EXCL_END,
    DATEDIFF('day', PERIOD_START, PERIOD_END) + 1                            AS DAYS_INCL_END
  FROM src s
),
validated AS (
  SELECT
    n.*,
    CASE
      WHEN PERIOD_START IS NULL OR PERIOD_END IS NULL THEN 'MISSING_DATES'
      WHEN PERIOD_END   <  PERIOD_START          THEN 'NEGATIVE_WINDOW'
      WHEN RATE_DECIMAL IS NULL                  THEN 'MISSING_RATE'
      WHEN PRINCIPAL    IS NULL                  THEN 'MISSING_PRINCIPAL'
      ELSE 'OK'
    END AS QUALITY_STATUS
  FROM norm n
),
calc AS (
  SELECT
    ARRANGEMENT_ID,
    ACTIVE_PRODUCT                                                          AS PRODUCT_ID,
    ALT_ID,
    CUSTOMER,
    PAYMENT_METHOD,
    PAYMENT_FREQ,
    PERIOD_START,
    PERIOD_END,
    DENOM,
    PRINCIPAL,
    EFFECTIVE_RATE_N,
    RATE_DECIMAL,
    QUALITY_STATUS,
    CASE WHEN QUALITY_STATUS = 'OK'
         THEN CAST(ROUND( (PRINCIPAL * RATE_DECIMAL) / DENOM, 8) AS DECIMAL(38,8))
         ELSE CAST(NULL AS DECIMAL(38,8))
    END                                                                     AS DAILY_ACCRUAL,
    CASE WHEN QUALITY_STATUS = 'OK'
         THEN CAST(
                ROUND( (PRINCIPAL * RATE_DECIMAL)
                       * ( CAST(DAYS_EXCL_END AS DECIMAL(18,9)) / DENOM ), 2),
                AS DECIMAL(38,2)
              )
         ELSE CAST(NULL AS DECIMAL(38,2))
    END                                                                     AS INTEREST_EXCL_END,
    CASE WHEN QUALITY_STATUS = 'OK'
         THEN CAST(
                ROUND( (PRINCIPAL * RATE_DECIMAL)
                       * ( CAST(DAYS_INCL_END AS DECIMAL(18,9)) / DENOM ), 2),
                AS DECIMAL(38,2)
              )
         ELSE CAST(NULL AS DECIMAL(38,2))
    END                                                                     AS INTEREST_INCL_END,
    CASE WHEN QUALITY_STATUS = 'OK'
         THEN CAST(
                ROUND( (PRINCIPAL * RATE_DECIMAL)
                       * ( CAST(DAYS_EXCL_END AS DECIMAL(18,9)) / DENOM ), 2),
                AS DECIMAL(38,2)
              )
         ELSE CAST(NULL AS DECIMAL(38,2))
    END                                                                     AS EXPECTED_INTEREST,
    CASE WHEN QUALITY_STATUS = 'OK' AND PAYMENT_METHOD = 'CAPITALISE'
         THEN CAST(
                ROUND( PRINCIPAL
                       + (PRINCIPAL * RATE_DECIMAL)
                         * ( CAST(DAYS_EXCL_END AS DECIMAL(18,9)) / DENOM ), 2),
                AS DECIMAL(38,2)
              )
         ELSE PRINCIPAL
    END                                                                     AS NEXT_PRINCIPAL_IF_CAPITALISE
  FROM validated
)
SELECT *
FROM calc
ORDER BY ARRANGEMENT_ID, PERIOD_START;
