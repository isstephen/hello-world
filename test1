stage('Row counts (fast metadata)') {
  steps {
    container('dap-build-tools') {
      withCredentials([
        sshUserPrivateKey(credentialsId: params.CREDENTIAL_ID, keyFileVariable: 'PRIVATE_KEY_PATH')
      ]) {
        withEnv([
          "SNOW_ACCOUNT=${params.SNOW_ACCOUNT}",
          "SNOW_USER=${params.SNOW_USER}",
          "SNOW_ROLE=${params.SNOW_ROLE}",
          "SNOW_WAREHOUSE=${params.SNOW_WH}",
          "SNOW_DATABASE=${params.SNOW_DB}",         // <- parameterized DB
          "SNOW_SCHEMA=${params.SNOW_SCHEMA}"        // <- parameterized schema
        ]) {
          sh '''#!/bin/bash
set -euo pipefail

# Build SQL using INFORMATION_SCHEMA (fast, metadata-based)
SQL="SELECT table_name, row_count
     FROM ${SNOW_DATABASE}.INFORMATION_SCHEMA.TABLES
     WHERE table_schema = UPPER('${SNOW_SCHEMA}')
       AND table_type = 'BASE TABLE'
       AND table_name LIKE 'F%%'
     ORDER BY table_name;"

# Console output (pretty table)
snowsql \
  -a "$SNOW_ACCOUNT" -u "$SNOW_USER" -r "$SNOW_ROLE" \
  -w "$SNOW_WAREHOUSE" -d "$SNOW_DATABASE" -s "$SNOW_SCHEMA" \
  --private-key-path "$PRIVATE_KEY_PATH" \
  -o friendly=false \
  -q "$SQL"

# CSV export for downstream use
snowsql \
  -a "$SNOW_ACCOUNT" -u "$SNOW_USER" -r "$SNOW_ROLE" \
  -w "$SNOW_WAREHOUSE" -d "$SNOW_DATABASE" -s "$SNOW_SCHEMA" \
  --private-key-path "$PRIVATE_KEY_PATH" \
  -o friendly=false -o output_format=csv -o header=true \
  -q "$SQL" > row_counts.csv
'''
        }
      }
    }
    // archive the CSV
    archiveArtifacts artifacts: 'row_counts.csv', fingerprint: true, onlyIfSuccessful: true
  }
}
