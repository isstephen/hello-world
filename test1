stage('Snowflake: PUT + COPY (user stage)') {
  steps {
    container('dap-build-tools') {
      withCredentials([sshUserPrivateKey(credentialsId: params.CREDENTIAL_ID, keyFileVariable: 'PRIVATE_KEY_PATH')]) {
        withEnv([
          "SNOW_ACCOUNT=${params.SNOW_ACCOUNT}",
          "SNOW_USER=${params.SNOW_USER}",
          "SNOW_ROLE=${params.SNOW_ROLE}",
          "SNOW_WAREHOUSE=${params.SNOW_WH}",
          "SNOW_DATABASE=${params.SNOW_DB}",
          "SNOW_SCHEMA=${params.SNOW_SCHEMA}",
          "SNOW_TABLE=${params.SNOW_TABLE}",
          "CSV_PATH=${params.CSV_PATH ?: 'S3_FILESIZES.csv'}"
        ]) {
          sh '''#!/bin/bash
set -euo pipefail

command -v snowsql >/dev/null 2>&1 || { echo "snowsql not found in PATH"; exit 127; }
[[ -f "$CSV_PATH" ]] || { echo "CSV file not found at $CSV_PATH"; ls -la; exit 66; }
FILE_BASENAME="$(basename "$CSV_PATH")"

cat > copy.sql <<SQL
USE ROLE ${SNOW_ROLE};
USE WAREHOUSE ${SNOW_WAREHOUSE};
USE DATABASE ${SNOW_DATABASE};
USE SCHEMA ${SNOW_SCHEMA};

SELECT CURRENT_ROLE(), CURRENT_WAREHOUSE(), CURRENT_DATABASE(), CURRENT_SCHEMA();

REMOVE @~ pattern='^${FILE_BASENAME//./\\\\.}$';

PUT file://$PWD/${CSV_PATH} @~ OVERWRITE=TRUE AUTO_COMPRESS=FALSE;

COPY INTO ${SNOW_TABLE}
  FROM @~/${FILE_BASENAME}
  FILE_FORMAT=(TYPE=CSV SKIP_HEADER=1 FIELD_OPTIONALLY_ENCLOSED_BY='"')
  ON_ERROR=ABORT_STATEMENT;
SQL

snowsql \
  -a "$SNOW_ACCOUNT" -u "$SNOW_USER" -r "$SNOW_ROLE" \
  -w "$SNOW_WAREHOUSE" -d "$SNOW_DATABASE" -s "$SNOW_SCHEMA" \
  --private-key-path "$PRIVATE_KEY_PATH" \
  -o friendly=false -o exit_on_error=true \
  -f copy.sql
'''
        }
      }
    }
  }
}

