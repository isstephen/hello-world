SELECT
  table_name,
  ordinal_position,
  column_name,
  data_type
FROM DB_INVESTMENTS_SYST02.INFORMATION_SCHEMA.COLUMNS
WHERE table_schema = 'INVESTMENTS_SERVE'
  AND table_name IN (
    'BNK_AA_ARRANGEMENT',
    'BNK_AA_ARR_ACCOUNT',
    'BNK_AA_ARR_INTEREST',
    'BNK_AA_ARR_PAYMENT_SCHEDULE',
    'BNK_AA_INTEREST_ACCRUALS', 
    ‘BNK_CUSTOMER’,
    'BNK_AA_BILL_DETAILS'
  )
ORDER BY table_name, ordinal_position;





-- ARRANGEMENT
SELECT ARRANGEMENT_ID, ACTIVE_PRODUCT, ARR_STATUS, CUSTOMER_ROLE, MIS_DATE
FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARRANGEMENT
ORDER BY MIS_DATE DESC
LIMIT 10;

-- ARR_ACCOUNT
SELECT ARRANGEMENT_KEY, ALT_ID_TYPE, ACTIVITY, MIS_DATE
FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARR_ACCOUNT
ORDER BY MIS_DATE DESC
LIMIT 10;

-- ARR_INTEREST
SELECT ARRANGEMENT_KEY, DAY_BASIS, EFFECTIVE_RATE, MIS_DATE
FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARR_INTEREST
ORDER BY MIS_DATE DESC
LIMIT 10;

-- PAYMENT_SCHEDULE
SELECT ARRANGEMENT_KEY, PAYMENT_TYPE, PAYMENT_METHOD, PAYMENT_FREQ, ID_COMP_3, START_DATE, MIS_DATE
FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARR_PAYMENT_SCHEDULE
ORDER BY MIS_DATE DESC
LIMIT 10;

-- INTEREST_ACCRUALS
SELECT PROPERTY_NAME, TO_DATE, PERIOD_START, PERIOD_END, BALANCE, MIS_DATE
FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_INTEREST_ACCRUALS
ORDER BY MIS_DATE DESC
LIMIT 10;

-- BILL_DETAILS
SELECT ARRANGEMENT_ID, BILL_AMOUNT, BILL_TYPE, MIS_DATE
FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_BILL_DETAILS
ORDER BY MIS_DATE DESC
LIMIT 10;



-- list BLL_DETAILS columns
SELECT column_name, data_type
FROM DB_INVESTMENTS_SYST02.INFORMATION_SCHEMA.COLUMNS
WHERE table_schema = 'INVESTMENTS_SERVE'
  AND table_name = 'BNK_AA_BILL_DETAILS'
ORDER BY ordinal_position;

-- find amount
SELECT column_name, data_type
FROM DB_INVESTMENTS_SYST02.INFORMATION_SCHEMA.COLUMNS
WHERE table_schema = 'INVESTMENTS_SERVE'
  AND table_name = 'BNK_AA_BILL_DETAILS'
  AND (
    data_type ILIKE '%NUMBER%' OR
    column_name ILIKE '%AMT%' OR
    column_name ILIKE '%AMOUNT%' OR
    column_name ILIKE '%CHARGE%' OR
    column_name ILIKE '%VALUE%'
  )
ORDER BY ordinal_position;


-- 猜测候选金额列（按你的真实列名替换/扩充）
WITH ta AS (
  SELECT
    ARRANGEMENT_KEY, MIS_DATE,
    TERM_AMOUNT, COMMITMENT_AMT, AMOUNT, PRINCIPAL_AMT
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARR_TERM_AMOUNT
),
u AS (
  SELECT
    'TERM_AMOUNT'      AS col, COUNT_IF(TERM_AMOUNT     IS NOT NULL) AS non_null FROM ta
  UNION ALL SELECT 'COMMITMENT_AMT', COUNT_IF(COMMITMENT_AMT IS NOT NULL) FROM ta
  UNION ALL SELECT 'AMOUNT',         COUNT_IF(AMOUNT         IS NOT NULL) FROM ta
  UNION ALL SELECT 'PRINCIPAL_AMT',  COUNT_IF(PRINCIPAL_AMT  IS NOT NULL) FROM ta
)
SELECT * FROM u ORDER BY non_null DESC;

-- 所有列 & 重点筛选：金额候选列（名字或类型像金额/本金/承诺额）
SELECT column_name, data_type, ordinal_position
FROM DB_INVESTMENTS_SYST02.INFORMATION_SCHEMA.COLUMNS
WHERE table_schema = 'INVESTMENTS_SERVE'
  AND table_name   = 'BNK_AA_ARR_TERM_AMOUNT'
ORDER BY ordinal_position;


SELECT column_name, data_type
FROM DB_INVESTMENTS_SYST02.INFORMATION_SCHEMA.COLUMNS
WHERE table_schema = 'INVESTMENTS_SERVE'
  AND table_name   = 'BNK_AA_ARR_TERM_AMOUNT'
  AND (
    data_type ILIKE '%NUMBER%' OR
    column_name ILIKE '%AMT%' OR
    column_name ILIKE '%AMOUNT%' OR
    column_name ILIKE '%PRINCIPAL%' OR
    column_name ILIKE '%COMMIT%'
  )
ORDER BY column_name;



WITH t AS (
  SELECT
    ARRANGEMENT_KEY, MIS_DATE,
    AMOUNT, CHANGE_AMOUNT, COMMITMENT_DRAWDOWN, COMMITMENT_REVERSAL,
    TRANCHE_AMOUNT, COMMT_AMOUNT
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARR_TERM_AMOUNT
),
u AS (
  SELECT 'AMOUNT'                AS col, COUNT_IF(AMOUNT                IS NOT NULL) FROM t
  UNION ALL SELECT 'CHANGE_AMOUNT',          COUNT_IF(CHANGE_AMOUNT          IS NOT NULL) FROM t
  UNION ALL SELECT 'COMMITMENT_DRAWDOWN',    COUNT_IF(COMMITMENT_DRAWDOWN    IS NOT NULL) FROM t
  UNION ALL SELECT 'COMMITMENT_REVERSAL',    COUNT_IF(COMMITMENT_REVERSAL    IS NOT NULL) FROM t
  UNION ALL SELECT 'TRANCHE_AMOUNT',         COUNT_IF(TRANCHE_AMOUNT         IS NOT NULL) FROM t
  UNION ALL SELECT 'COMMT_AMOUNT',           COUNT_IF(COMMT_AMOUNT           IS NOT NULL) FROM t
)
SELECT * FROM u ORDER BY 2 DESC;



term_amount_latest AS (
  SELECT
    SPLIT_PART(ta.ARRANGEMENT_KEY,'-',1) AS ARRANGEMENT_ID,
    -- 主金额列：AMOUNT（TEXT → DECIMAL）
    TRY_TO_DECIMAL(REGEXP_REPLACE(ta.AMOUNT::STRING,'[^0-9\\.-]',''),38,2) AS PRINCIPAL_AMT,
    -- 事件/备注（可选）
    UPPER(COALESCE(ta.COMMITMENT_TYPE, ta.FULL_COMMITTMENT_ACTIVITY))       AS TERM_EVENT,
    COALESCE(
      TRY_TO_DATE(SPLIT_PART(SPLIT_PART(ta.ARRANGEMENT_KEY,'-',3),'.',1),'YYYYMMDD'),
      ta.MIS_DATE::DATE
    ) AS ID_DATE,
    ta.MIS_DATE
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.BNK_AA_ARR_TERM_AMOUNT ta, cob
  WHERE COALESCE(
          TRY_TO_DATE(SPLIT_PART(SPLIT_PART(ta.ARRANGEMENT_KEY,'-',3),'.',1),'YYYYMMDD'),
          ta.MIS_DATE::DATE
        ) <= cob.cob_date
  QUALIFY ROW_NUMBER() OVER (
    PARTITION BY SPLIT_PART(ta.ARRANGEMENT_KEY,'-',1)
    ORDER BY COALESCE(
             TRY_TO_DATE(SPLIT_PART(SPLIT_PART(ta.ARRANGEMENT_KEY,'-',3),'.',1),'YYYYMMDD'),
             ta.MIS_DATE::DATE
           ) DESC,
           ta.MIS_DATE DESC
  ) = 1
)



