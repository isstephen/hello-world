stage('Snowflake: PUT + COPY (FQN + preview + result)') {
  steps {
    container('dap-build-tools') {
      withCredentials([sshUserPrivateKey(credentialsId: params.CREDENTIAL_ID, keyFileVariable: 'PRIVATE_KEY_PATH')]) {
        withEnv([
          "SNOW_ACCOUNT=${params.SNOW_ACCOUNT}",
          "SNOW_USER=${params.SNOW_USER}",
          "SNOW_ROLE=${params.SNOW_ROLE}",
          "SNOW_WAREHOUSE=${params.SNOW_WH}",
          "SNOW_DATABASE=${params.SNOW_DB}",
          "SNOW_SCHEMA=${params.SNOW_SCHEMA}",
          "SNOW_TABLE=${params.SNOW_TABLE}",
          "CODE_DATE=${params.CODE_DATE ?: ''}",
          "CSV_PREFIX=${params.CSV_PREFIX ?: 'S3_FILESIZES'}",
          "FORCE_COPY=${params.FORCE_COPY ?: 'TRUE'}"
        ]) {
          sh '''#!/bin/bash
set -euo pipefail

to_lower(){ printf '%s' "$1" | tr '[:upper:]' '[:lower:]'; }

: "${CODE_DATE:=}"
: "${CSV_PREFIX:=S3_FILESIZES}"
: "${FORCE_COPY:=TRUE}"

if [[ -z "$CSV_PREFIX" || "$(to_lower "$CSV_PREFIX")" == "null" || "$(to_lower "$CSV_PREFIX")" == "none" ]]; then
  CSV_PREFIX="S3_FILESIZES"
fi
if [[ -z "$FORCE_COPY" || "$(to_lower "$FORCE_COPY")" == "null" ]]; then
  FORCE_COPY="TRUE"
fi

CSV_PATH="${CSV_PREFIX}${CODE_DATE:+_${CODE_DATE}}.csv"
FILE_BASENAME="$(basename "$CSV_PATH")"
ESCAPED_BASENAME="${FILE_BASENAME//./\\\\.}"
TARGET_FQN="${SNOW_DATABASE}.${SNOW_SCHEMA}.${SNOW_TABLE}"

command -v snowsql >/dev/null 2>&1 || { echo "snowsql not found in PATH"; exit 127; }
[[ -f "$CSV_PATH" ]] || { echo "CSV file not found: $CSV_PATH"; ls -la; exit 66; }

echo "Using CSV_PATH=$CSV_PATH ; FILE_BASENAME=$FILE_BASENAME ; TARGET_FQN=$TARGET_FQN ; FORCE_COPY=$FORCE_COPY"

{
  printf 'USE ROLE %s;\\n'        "$SNOW_ROLE"
  printf 'USE WAREHOUSE %s;\\n'   "$SNOW_WAREHOUSE"
  printf 'USE DATABASE %s;\\n'    "$SNOW_DATABASE"
  printf 'USE SCHEMA %s;\\n\\n'   "$SNOW_SCHEMA"

  printf 'SELECT CURRENT_ROLE() role, CURRENT_WAREHOUSE() wh, CURRENT_DATABASE() db, CURRENT_SCHEMA() sch;\\n\\n'

  printf "REMOVE @~ pattern='^%s$';\\n" "$ESCAPED_BASENAME"
  printf "PUT file://%s @~ OVERWRITE=TRUE AUTO_COMPRESS=FALSE;\\n" "$PWD/$CSV_PATH"
  printf "LIST @~ pattern='^%s$';\\n\\n" "$ESCAPED_BASENAME"

  printf "SELECT metadata\\$filename AS fname, t.\\$1 AS c1, t.\\$2 AS c2, t.\\$3 AS c3\\n"
  printf "FROM @~/%s (FILE_FORMAT=(TYPE=CSV SKIP_HEADER=1 FIELD_OPTIONALLY_ENCLOSED_BY='\"')) t\\n" "$FILE_BASENAME"
  printf "LIMIT 3;\\n\\n"

  printf 'COPY INTO %s\\n' "$TARGET_FQN"
  printf '  FROM @~/%s\\n' "$FILE_BASENAME"
  printf "  FILE_FORMAT=(TYPE=CSV SKIP_HEADER=1 FIELD_OPTIONALLY_ENCLOSED_BY='\"')\\n"
  printf '  ON_ERROR=ABORT_STATEMENT\\n'
  printf '  FORCE=%s;\\n\\n' "$FORCE_COPY"

  printf 'SELECT rows_loaded, errors_seen, first_error_message, first_error_line FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));\\n\\n'

  printf 'SELECT * FROM %s ORDER BY 1 DESC LIMIT 5;\\n' "$TARGET_FQN"
} > copy.sql

echo "===== copy.sql (head) ====="
sed -n '1,120p' copy.sql || true
echo "===== end ====="

snowsql \
  -a "$SNOW_ACCOUNT" -u "$SNOW_USER" -r "$SNOW_ROLE" \
  -w "$SNOW_WAREHOUSE" -d "$SNOW_DATABASE" -s "$SNOW_SCHEMA" \
  --private-key-path "$PRIVATE_KEY_PATH" \
  -o friendly=false -o exit_on_error=true \
  -f copy.sql
'''
        }
      }
    }
  }
}
