
CREATE OR REPLACE VIEW DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.EXPECTED_INTEREST AS
WITH src AS (
  SELECT
    ARRANGEMENT_ID,
    ACTIVE_PRODUCT,
    ALT_ID,
    CUSTOMER,
    UPPER(TRIM(COALESCE(DAY_BASIS,'E'))) AS DAY_BASIS,
    TRY_TO_NUMBER(EFFECTIVE_RATE)        AS EFFECTIVE_RATE,  
    UPPER(TRIM(COALESCE(PAYMENT_METHOD,''))) AS PAYMENT_METHOD,
    PAYMENT_FREQ,
    TRY_TO_DATE(PERIOD_START) AS PERIOD_START,
    TRY_TO_DATE(PERIOD_END)   AS PERIOD_END,
    TRY_TO_NUMBER(BALANCE)    AS PRINCIPAL
  FROM DB_INVESTMENTS_SYST02.INVESTMENTS_SERVE.INTEREST_FIELD_3;
),
norm AS (
  SELECT
    s.*,
    CASE WHEN DAY_BASIS IN ('E','365') THEN 365 ELSE 365 END AS DENOM,
    CASE WHEN EFFECTIVE_RATE IS NULL THEN NULL
         WHEN EFFECTIVE_RATE > 1 THEN EFFECTIVE_RATE/100.0
         ELSE EFFECTIVE_RATE
    END AS RATE_DECIMAL,
    DATEDIFF('day', PERIOD_START, PERIOD_END)     AS DAYS_EXCL_END,
    DATEDIFF('day', PERIOD_START, PERIOD_END) + 1 AS DAYS_INCL_END
  FROM src s
),
calc AS (
  SELECT
    n.*,
    ROUND(PRINCIPAL * RATE_DECIMAL / DENOM, 8)                                    AS DAILY_ACCRUAL,
    ROUND(PRINCIPAL * RATE_DECIMAL * (DAYS_EXCL_END::FLOAT / DENOM), 2)           AS INTEREST_EXCL_END,
    ROUND(PRINCIPAL * RATE_DECIMAL * (DAYS_INCL_END::FLOAT / DENOM), 2)           AS INTEREST_INCL_END,
    ROUND(PRINCIPAL * RATE_DECIMAL * (DAYS_EXCL_END::FLOAT / DENOM), 2)           AS EXPECTED_INTEREST,
    CASE WHEN PAYMENT_METHOD = 'CAPITALISE'
         THEN ROUND(PRINCIPAL + (PRINCIPAL * RATE_DECIMAL * (DAYS_EXCL_END::FLOAT / DENOM)), 2)
         ELSE PRINCIPAL
    END AS NEXT_PRINCIPAL_IF_CAPITALISE
  FROM norm n
)
SELECT
  ARRANGEMENT_ID,
  ACTIVE_PRODUCT AS PRODUCT_ID,
  ALT_ID,
  CUSTOMER,
  PAYMENT_METHOD,
  PAYMENT_FREQ,
  PERIOD_START,
  PERIOD_END,
  DENOM            AS DAY_DENOM,
  DAYS_EXCL_END    AS DAYS_USED,        
  DAILY_ACCRUAL,
  PRINCIPAL,
  EFFECTIVE_RATE,
  RATE_DECIMAL,
  EXPECTED_INTEREST,
  INTEREST_EXCL_END,
  INTEREST_INCL_END,
  NEXT_PRINCIPAL_IF_CAPITALISE
FROM calc
ORDER BY ARRANGEMENT_ID, PERIOD_START;
